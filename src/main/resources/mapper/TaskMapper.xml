<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.w0rm.crypto.db.mappter.TaskMapper">
  <resultMap id="BaseResultMap" type="cc.w0rm.crypto.db.domain.Task">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="biz_id" jdbcType="VARCHAR" property="bizId" />
    <result column="inst_id" jdbcType="VARCHAR" property="instId" />
    <result column="bar" jdbcType="VARCHAR" property="bar" />
    <result column="begin" jdbcType="BIGINT" property="begin" />
    <result column="end" jdbcType="BIGINT" property="end" />
    <result column="task_limit" jdbcType="INTEGER" property="taskLimit" />
    <result column="task_threads" jdbcType="INTEGER" property="taskThreads" />
    <result column="task_interval" jdbcType="BIGINT" property="taskInterval" />
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, biz_id, inst_id, bar, begin, end, task_limit, task_threads, task_interval, create_at
  </sql>
  <select id="selectByExample" parameterType="cc.w0rm.crypto.db.domain.TaskExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from task
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from task
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cc.w0rm.crypto.db.domain.TaskExample">
    delete from task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cc.w0rm.crypto.db.domain.Task" useGeneratedKeys="true">
    insert into task (biz_id, inst_id, bar, 
      begin, end, task_limit, 
      task_threads, task_interval, create_at
      )
    values (#{bizId,jdbcType=VARCHAR}, #{instId,jdbcType=VARCHAR}, #{bar,jdbcType=VARCHAR}, 
      #{begin,jdbcType=BIGINT}, #{end,jdbcType=BIGINT}, #{taskLimit,jdbcType=INTEGER}, 
      #{taskThreads,jdbcType=INTEGER}, #{taskInterval,jdbcType=BIGINT}, #{createAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cc.w0rm.crypto.db.domain.Task" useGeneratedKeys="true">
    insert into task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bizId != null">
        biz_id,
      </if>
      <if test="instId != null">
        inst_id,
      </if>
      <if test="bar != null">
        bar,
      </if>
      <if test="begin != null">
        begin,
      </if>
      <if test="end != null">
        end,
      </if>
      <if test="taskLimit != null">
        task_limit,
      </if>
      <if test="taskThreads != null">
        task_threads,
      </if>
      <if test="taskInterval != null">
        task_interval,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bizId != null">
        #{bizId,jdbcType=VARCHAR},
      </if>
      <if test="instId != null">
        #{instId,jdbcType=VARCHAR},
      </if>
      <if test="bar != null">
        #{bar,jdbcType=VARCHAR},
      </if>
      <if test="begin != null">
        #{begin,jdbcType=BIGINT},
      </if>
      <if test="end != null">
        #{end,jdbcType=BIGINT},
      </if>
      <if test="taskLimit != null">
        #{taskLimit,jdbcType=INTEGER},
      </if>
      <if test="taskThreads != null">
        #{taskThreads,jdbcType=INTEGER},
      </if>
      <if test="taskInterval != null">
        #{taskInterval,jdbcType=BIGINT},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cc.w0rm.crypto.db.domain.TaskExample" resultType="java.lang.Long">
    select count(*) from task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update task
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=INTEGER},
      </if>
      <if test="row.bizId != null">
        biz_id = #{row.bizId,jdbcType=VARCHAR},
      </if>
      <if test="row.instId != null">
        inst_id = #{row.instId,jdbcType=VARCHAR},
      </if>
      <if test="row.bar != null">
        bar = #{row.bar,jdbcType=VARCHAR},
      </if>
      <if test="row.begin != null">
        begin = #{row.begin,jdbcType=BIGINT},
      </if>
      <if test="row.end != null">
        end = #{row.end,jdbcType=BIGINT},
      </if>
      <if test="row.taskLimit != null">
        task_limit = #{row.taskLimit,jdbcType=INTEGER},
      </if>
      <if test="row.taskThreads != null">
        task_threads = #{row.taskThreads,jdbcType=INTEGER},
      </if>
      <if test="row.taskInterval != null">
        task_interval = #{row.taskInterval,jdbcType=BIGINT},
      </if>
      <if test="row.createAt != null">
        create_at = #{row.createAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update task
    set id = #{row.id,jdbcType=INTEGER},
      biz_id = #{row.bizId,jdbcType=VARCHAR},
      inst_id = #{row.instId,jdbcType=VARCHAR},
      bar = #{row.bar,jdbcType=VARCHAR},
      begin = #{row.begin,jdbcType=BIGINT},
      end = #{row.end,jdbcType=BIGINT},
      task_limit = #{row.taskLimit,jdbcType=INTEGER},
      task_threads = #{row.taskThreads,jdbcType=INTEGER},
      task_interval = #{row.taskInterval,jdbcType=BIGINT},
      create_at = #{row.createAt,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cc.w0rm.crypto.db.domain.Task">
    update task
    <set>
      <if test="bizId != null">
        biz_id = #{bizId,jdbcType=VARCHAR},
      </if>
      <if test="instId != null">
        inst_id = #{instId,jdbcType=VARCHAR},
      </if>
      <if test="bar != null">
        bar = #{bar,jdbcType=VARCHAR},
      </if>
      <if test="begin != null">
        begin = #{begin,jdbcType=BIGINT},
      </if>
      <if test="end != null">
        end = #{end,jdbcType=BIGINT},
      </if>
      <if test="taskLimit != null">
        task_limit = #{taskLimit,jdbcType=INTEGER},
      </if>
      <if test="taskThreads != null">
        task_threads = #{taskThreads,jdbcType=INTEGER},
      </if>
      <if test="taskInterval != null">
        task_interval = #{taskInterval,jdbcType=BIGINT},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cc.w0rm.crypto.db.domain.Task">
    update task
    set biz_id = #{bizId,jdbcType=VARCHAR},
      inst_id = #{instId,jdbcType=VARCHAR},
      bar = #{bar,jdbcType=VARCHAR},
      begin = #{begin,jdbcType=BIGINT},
      end = #{end,jdbcType=BIGINT},
      task_limit = #{taskLimit,jdbcType=INTEGER},
      task_threads = #{taskThreads,jdbcType=INTEGER},
      task_interval = #{taskInterval,jdbcType=BIGINT},
      create_at = #{createAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>